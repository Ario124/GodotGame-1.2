[gd_scene load_steps=42 format=2]

[ext_resource path="res://assets/new_player/Gunner_Black_Death.png" type="Texture" id=1]
[ext_resource path="res://assets/png/health_progress_2.1.png" type="Texture" id=2]
[ext_resource path="res://assets/png/health_over_2.1.png" type="Texture" id=3]
[ext_resource path="res://assets/png/health_under_2.1.png" type="Texture" id=4]
[ext_resource path="res://src/UI/GameOver.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/UI/VirusID_Score.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/light.png" type="Texture" id=9]
[ext_resource path="res://assets/new_player/Gunner_Black_Idle.png" type="Texture" id=52]
[ext_resource path="res://assets/new_player/Gunner_Black_Run.png" type="Texture" id=53]
[ext_resource path="res://assets/new_player/Gunner_Black_Jump.png" type="Texture" id=54]
[ext_resource path="res://assets/new_player/Gunner_Black_Crouch.png" type="Texture" id=55]
[ext_resource path="res://src/Actors/Camera2D.gd" type="Script" id=56]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

#signal grounded_updated(is_grounded)

const UP = Vector2(0, -1)
const SLOPE_STOP = 64
const CRAWL_SPEED = 3 * 140

var velocity = Vector2()
var move_speed = 4 * 125
var gravity = 1750
var jump_velocity = -1000
var is_grounded
var player_alive = true
var total_coin = 0


var max_hp = 250

onready var current_coin = total_coin
onready var state_machine = $PlayerFSM
onready var current_hp = max_hp
onready var raycasts = $Raycasts
onready var anim_player = $AnimatedSprite

onready var standing_collision = $CollisionShape2D
onready var crouching_collision = $CollisionShape2D2



func _ready():
	current_hp = max_hp
	
func _physics_process(_delta):
	var was_grounded = is_grounded
	is_grounded = is_on_floor()
	
	if was_grounded == null || is_grounded != was_grounded:
		pass
		#emit_signal(\"grounded_updated\", is_grounded)

func _apply_gravity(delta):
	# Apply Gravity
	velocity.y += gravity * delta

func _apply_movement():
	if player_alive:
		velocity = move_and_slide(velocity, UP, SLOPE_STOP)
		is_grounded = _check_is_grounded()
	
func reduce_spread(spread):
	return spread

func _input(event):
	if event.is_action_pressed(\"jump\") && is_grounded:
		velocity.y = jump_velocity

func _handle_move_input(var move_speed = self.move_speed):
	if player_alive:
		var move_direction = -int(Input.is_action_pressed(\"move_left\")) + int(Input.is_action_pressed(\"move_right\"))
		velocity.x = lerp(velocity.x, move_speed * move_direction, _get_h_weight())
		
		#Flip sprite horizontally depending on the players choice to walk left/right
		if move_direction < 0 && player_alive:
			$AnimatedSprite.flip_h = true
			$Gun.position.x = -50
		elif move_direction > 0 && player_alive:
			$AnimatedSprite.flip_h = false
			$Gun.position.x = 50
		#elif move_direction == 0 && !player_alive:
		#	pass

func _get_h_weight():
	return 0.5 if is_grounded else 0.4	
	

func PlayerOnHit(damage):
	current_hp -= damage
	get_node(\"PlayerHealth\").value = int((float(current_hp) / max_hp) * 100)
	if current_hp <= 0:
		player_alive = false
		player_death()
		

func AddCoin(coin_value):
	total_coin += coin_value
	#Print for testing
	print(total_coin) 
	get_node(\"VirusID_Score/Panel/Amount\").text = str(total_coin)
	
	
func player_death():
	player_alive = false
	
	$PlayerHealth.hide()
	$AnimatedSprite.play(\"death_new\")
	yield(get_node(\"AnimatedSprite\"), \"animation_finished\")
	standing_collision.disabled = true
	crouching_collision.disabled = true
	yield(get_tree().create_timer(0.6), \"timeout\")
	get_node(\"Game_over_scene\").play(\"game_over\")
	yield(get_tree().create_timer(2.1), \"timeout\")
	get_tree().reload_current_scene()

func _check_is_grounded():
	for raycast in raycasts.get_children():
		if raycast.is_colliding():
			return true
	return false

func _on_crouch():
	standing_collision.disabled = true
	crouching_collision.disabled = false

func _on_stand():
	standing_collision.disabled = false
	crouching_collision.disabled = true
	#while standing_collision.disabled && !state_machine.is_crouched():
	#	if can_stand():
	#		standing_collision.disabled = false
	#		crouching_collision.disabled = true
	#	yield(get_tree(), \"physics_frame\")

func can_stand() -> bool:
	var space_state = get_world_2d().direct_space_state
	var query = Physics2DShapeQueryParameters.new()
	query.set_shape(standing_collision.shape)
	query.transform = standing_collision.global_transform
	query.collision_layer = collision_mask
	var results = space_state.intersect_shape(query)
	
	for i in range(results.size() - 1, -1, -1):
		var collider = results[i].collider
		var shape = results[i].shape
		if collider is CollisionObject2D && collider.is_shape_owner_one_way_collision_enabled(shape):
			results.remove(i)
		elif collider is TileMap:
			var tile_id = collider.get_cellv(results[i].metadata)
			if collider.tile_set.tile_get_shape_one_way(tile_id, 0):
				results.remove(i)
	return results.size() == 0
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 39.8786, 28.041 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 35, 26.6444 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 52 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=26]
flags = 4
atlas = ExtResource( 52 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=27]
flags = 4
atlas = ExtResource( 52 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=28]
flags = 4
atlas = ExtResource( 52 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=29]
flags = 4
atlas = ExtResource( 52 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 53 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 144, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 192, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=15]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 240, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=16]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 288, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 336, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 55 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=19]
flags = 4
atlas = ExtResource( 55 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=20]
flags = 4
atlas = ExtResource( 55 )
region = Rect2( 96, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 54 )
region = Rect2( 0, 0, 48, 48 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 54 )
region = Rect2( 48, 0, 48, 48 )

[sub_resource type="SpriteFrames" id=23]
animations = [ {
"frames": [ SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ) ],
"loop": true,
"name": "idle_new",
"speed": 5.0
}, {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ) ],
"loop": true,
"name": "run_new",
"speed": 8.0
}, {
"frames": [ SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ) ],
"loop": false,
"name": "death_new",
"speed": 10.0
}, {
"frames": [ SubResource( 18 ), SubResource( 19 ), SubResource( 20 ) ],
"loop": false,
"name": "crouch_new",
"speed": 8.0
}, {
"frames": [ SubResource( 21 ), SubResource( 22 ) ],
"loop": false,
"name": "jump_new",
"speed": 8.0
} ]

[sub_resource type="RectangleShape2D" id=24]
extents = Vector2( 17.7, 30 )

[node name="Player" type="KinematicBody2D" groups=[
"Player",
]]
scale = Vector2( 0.8, 0.8 )
z_index = 1025
collision_mask = 2
script = SubResource( 1 )

[node name="Light2D" type="Light2D" parent="."]
position = Vector2( 0, -170 )
scale = Vector2( 1.1, 1.1 )
z_index = 1
texture = ExtResource( 9 )
energy = 1.7

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 0, -69.2501 )
current = true
limit_left = 0
limit_top = 0
limit_bottom = 2100
limit_smoothed = true
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = true
smoothing_speed = 3.0
drag_margin_left = 0.01
drag_margin_top = 0.8
drag_margin_right = 0.01
editor_draw_limits = true
editor_draw_drag_margin = true
script = ExtResource( 56 )

[node name="ShiftTween" type="Tween" parent="Camera2D"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, -206 )
rotation = 1.5708
shape = SubResource( 2 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
position = Vector2( 0, -200 )
rotation = 1.5708
shape = SubResource( 3 )
disabled = true

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0, -210 )
scale = Vector2( 3, 3 )
z_index = 1025
frames = SubResource( 23 )
animation = "idle_new"

[node name="PlayerHealth" type="TextureProgress" parent="."]
margin_left = -34.0
margin_top = -285.25
margin_right = 36.0
margin_bottom = -277.25
value = 100.0
texture_under = ExtResource( 4 )
texture_over = ExtResource( 3 )
texture_progress = ExtResource( 2 )
tint_progress = Color( 0.0509804, 0.945098, 0.192157, 1 )
nine_patch_stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Raycasts" type="Node2D" parent="."]
position = Vector2( 0, -167.5 )

[node name="RayCast2D" type="RayCast2D" parent="Raycasts"]
position = Vector2( 20, 0 )
enabled = true
collision_mask = 10

[node name="RayCast2D2" type="RayCast2D" parent="Raycasts"]
enabled = true
collision_mask = 10

[node name="RayCast2D3" type="RayCast2D" parent="Raycasts"]
position = Vector2( -25, 0 )
enabled = true
collision_mask = 10

[node name="Timer" type="Timer" parent="."]
wait_time = 2.5
autostart = true

[node name="Game_over_scene" parent="." instance=ExtResource( 5 )]

[node name="Coin_Detector" type="Area2D" parent="."]

[node name="Coin_Collision" type="CollisionShape2D" parent="Coin_Detector"]
visible = false
position = Vector2( 0, -165 )
shape = SubResource( 24 )

[node name="VirusID_Score" parent="." instance=ExtResource( 8 )]
